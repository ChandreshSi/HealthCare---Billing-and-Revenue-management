swagger: "2.0"
host: localhost:8080
basePath: /billing
info:
  description: "Healtcare system Billing APIs."
  version: "1.0.0"
  title: "Health care system - billing"
  contact:
    email: "cs62@njit.edu"
tags:
- name: "codes"
  description: "Everything about procedures and rates"
- name: "claims"
  description: "Billing claims"
- name: "configuration"
  description: "Billing Configurations"
schemes:
- "http"
paths:
  /icd10:
    get:
      tags:
      - "codes"
      summary: "List the range of ICD-10 codes to search from"
      description: "Returns the range search list of ICD-10 codes"
      operationId: "getICD10Codes"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ICD10"
  /icd10/{icd10Code}:
    get:
      tags:
      - "codes"
      summary: "Returns the list of ICD-10 codes filtered by the {code}."
      description: "List the range of ICD-10 codes based on the code provided in the path. The code could be a range string provided as a code."
      operationId: "getICD10Code"
      parameters:
      - name: "icd10Code"
        in: "path"
        description: "Search string. This could be code range/group or the code. This has to be same as a code provided in above API or this API"
        required: true
        type: "string"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ICD10"
  /cptGroups:
    get:
      tags:
      - "codes"
      summary: "List all the CPT codes with the grouping"
      description: "Returns list of CPT codes with grouping"
      operationId: "getCPTCodes"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CPTGroup"
  /cptGroups/{groupId}:
    get:
      tags:
      - "codes"
      summary: "List all the CPT codes for the given group id."
      description: "Returns all the CPT codes for the given group id."
      operationId: "getCPTCodesBySearch"
      parameters:
      - name: "groupId"
        in: "path"
        description: "Group id for the code"
        required: true
        type: "string"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/CPTGroup"
  /cpts:
    get:
      tags:
      - "codes"
      summary: "List all the CPT codes for the given group id."
      description: "Returns all the CPT codes for the given group id."
      operationId: "getCPTs"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CPT"
  /cpts/{cptId}:
    get:
      tags:
      - "codes"
      summary: "List all the CPT codes for the given group id."
      description: "Returns all the CPT codes for the given group id."
      operationId: "getCPT"
      parameters:
      - name: "cptId"
        in: "path"
        description: "Group id for the code"
        required: true
        type: "string"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/CPT"
    patch:
      tags:
      - "codes"
      summary: "Patch the rate againt the CPT."
      description: "Patch the rate againt the CPT."
      operationId: "patchCPT"
      parameters:
      - name: "cptId"
        in: "path"
        description: "Group id for the code"
        required: true
        type: "string"
      - in: body
        name: "cpt"
        schema:
          type: object
          properties:
            rate:
              type: number
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/CPT"
  /claims:
    get:
      tags:
      - "claims"
      summary: "Returns list of all claims"
      description: "Returns list of all claims"
      operationId: "getClaims"
      parameters:
      - name: "status"
        in: "query"
        description: "status filter"
        required: false
        type: "string"
        enum:
          - "INITIATED"
          - "SENT_FOR_ADJUDICATION"
          - "PARTIALLY_PROCESSED"
          - "ACCEPTED"
          - "REJECTED"
          - "DENIED"
          - "PROCESSED"
          - "DELETED"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Claim"
        "400":
          description: "Invalid tag value"
    post:
      tags:
      - "claims"
      summary: "Creates claim"
      description: "Creates claim based on the ICD and CPT codes provided for a given patient"
      operationId: "createClaim"
      parameters:
        - in: body
          name: "CreateClaimRequest"
          schema:
            $ref: "#/definitions/CreateClaimRequest"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "Successful"
  /claims/{claimId}:
    get:
      tags:
      - "claims"
      summary: "Find claim by ID"
      description: "Returns a single claim"
      operationId: "getClaimById"
      parameters:
      - name: "claimId"
        in: "path"
        description: "ID of claim that needs to be updated"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Claim"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Pet not found"
    put:
      tags:
      - "claims"
      summary: "Updates a claim"
      description: ""
      operationId: "updateClaim"
      parameters:
      - name: "claimId"
        in: "path"
        description: "ID of pet that needs to be updated"
        required: true
        type: "string"
      - in: body
        name: "status"
        schema:
          $ref: "#/definitions/Claim"
      responses:
        "405":
          description: "Invalid input"
    patch:
      tags:
      - "claims"
      summary: "Patch a claim with status"
      description: ""
      operationId: "patchClaim"
      parameters:
      - name: "claimId"
        in: "path"
        description: "ID of pet that needs to be updated"
        required: true
        type: "string"
      - in: body
        name: "status"
        schema:
          type: object
          properties:
            status:
              type: "string"
              description: "status of the claim"
              enum:
              - "INITIATED"
              - "SENT_FOR_ADJUDICATION"
              - "PARTIALLY_PROCESSED"
              - "ACCEPTED"
              - "REJECTED"
              - "DENIED"
              - "DELETED"
              - "PROCESSED"
      responses:
        "405":
          description: "Invalid input"
    delete:
      tags:
      - "claims"
      summary: "Deletes a claim"
      description: ""
      operationId: "deleteClaim"
      parameters:
      - name: "claimId"
        in: "path"
        description: "ID of pet that needs to be updated"
        required: true
        type: "string"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Not found"
  /claims/{claimId}/icd10s:
    put:
      tags:
      - "claims"
      summary: "Updates claim with ICD-10 code"
      description: ""
      operationId: "updateClaimICD"
      parameters:
      - name: "claimId"
        in: "path"
        description: "ID of pet that needs to be updated"
        required: true
        type: "string"
      - in: body
        name: "status"
        schema:
          type: object
          items:
            $ref: "#/definitions/ICD10"
      responses:
        "405":
          description: "Invalid input"
  /claims/{claimId}/cpts:
    put:
      tags:
      - "claims"
      summary: "Updates claim with CPT code"
      description: ""
      operationId: "updateClaimCPT"
      parameters:
      - name: "claimId"
        in: "path"
        description: "ID of pet that needs to be updated"
        required: true
        type: "string"
      - in: body
        name: "status"
        schema:
          type: object
          items:
            $ref: "#/definitions/CPT"
      responses:
        "405":
          description: "Invalid input"
  /claims/{claimId}/transactions:
    get:
      tags:
      - "claims"
      summary: "List of transactions of the claimId"
      description: "List of transactions of the claimId"
      operationId: "getTransactions"
      parameters:
      - name: "claimId"
        in: "path"
        description: "ID of claim that needs to be updated"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Pet not found"
    post:
      tags:
      - "claims"
      summary: "List of transactions of the claimId"
      description: "List of transactions of the claimId"
      operationId: "createTransaction"
      parameters:
      - name: "claimId"
        in: "path"
        description: "ID of claim that needs to be updated"
        required: true
        type: "string"
      - in: body
        name: "transactions"
        schema:
          $ref: "#/definitions/Transaction"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Pet not found"
  /claims/{claimId}/actions/process:
    post:
      tags:
        - "claims"
      summary: "Process a claim"
      description: "Process a claim"
      operationId: "processClaim"
      parameters:
      - name: "claimId"
        in: "path"
        description: "ID of pet that needs to be updated"
        required: true
        type: "string"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Claim not found"
  /claims/{claimId}/actions/generateStatement:
    post:
      tags:
        - "claims"
      summary: "Generates the statement and returs the statement object"
      description: "Generates the statement and returs the statement object"
      operationId: "generateStatement"
      parameters:
      - name: "claimId"
        in: "path"
        description: "ID of pet that needs to be updated"
        required: true
        type: "string"
      responses:
        "400":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Statement"
        "404":
          description: "Claim not found"
  /claims/{claimId}/actions/settle:
    post:
      tags:
        - "claims"
      summary: "Settles the claim"
      description: "Settles the claim. Call this when bill is settled."
      operationId: "settleClaim"
      parameters:
      - name: "claimId"
        in: "path"
        description: "ID of pet that needs to be updated"
        required: true
        type: "string"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Claim not found"
  /configurations:
    get:
      tags:
      - "configuration"
      summary: "Gets billing configuration"
      operationId: "getConfiguration"
      responses:
        "405":
          description: "Invalid input"
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: object
definitions:
  ICD10:
    type: "object"
    properties:
      id:
        type: "string"
        description: "object id"
      code:
        type: "string"
        description: "This could represent the ICD-10 code or a search string/grouping"
      description:
        type: "string"
        description: "Information about the code."
      subCodes:
        type: "array"
        items:
          "$ref": "#/definitions/ICD10"
  CPT:
    type: object
    properties:
      id:
        type: "string"
        description: "object id"
      code:
        type: "string"
        description: "CPT code"
      description:
        type: "string"
        description: "information about the code"
      groupId:
        type: "string"
        description: "CPT group id"
      rate:
        type: "number"
  CPTGroup:
    type: object
    properties:
      id:
        type: "string"
        description: "object id"
      type:
        type: "string"
        description: "Type of grouping"
      description:
        type: "string"
        description: "information about the grouping"
      additionalInfo:
        type: "string"
        description: "Any additional info about the grouping"
      cpts:
        type: array
        items:
          "$ref": "#/definitions/CPT"
  Transaction:
    type: object
    properties:
      id:
        type: "string"
        description: "object id"
      claimId:
        type: "string"
      amount:
        type: "number"
      comments:
        type: "string"
      payerId:
        type: "string"
      timeCreated:
        type: "string"
      transactionType:
        type: "string"
  Statement:
    type: object
  CreateClaimRequest:
    type: "object"
    properties:
      icd10Codes:
        type: "array"
        description: "Provide the ICD10 code"
        items:
          type: string
      cpts:
        type: "array"
        description: "Provide the CPT code or CPT id"
        items:
          type: string
      patientId:
        type: "string"
      additionalInfo:
        type: "string"
  Claim:
    type: "object"
    properties:
      id:
        type: "string"
        description: "claim id"
      CPTs:
        type: "array"
        items:
          $ref: "#/definitions/CPT"
      icd10s:
        type: "array"
        items:
          $ref: "#/definitions/ICD10"
      patientId:
        type: "string"
      additionalInfo:
        type: "string"
      amount:
        type: "number"
      status:
        type: "string"
        description: "status of the claim"
        enum:
          - "INITIATED"
          - "SENT_FOR_ADJUDICATION"
          - "PARTIALLY_PROCESSED"
          - "ACCEPTED"
          - "REJECTED"
          - "DENIED"
          - "DELETED"
          - "PROCESSED"
      timeCreated:
        type: "string"
        description: "ISO format date created"
      timeUpdated:
        type: "string"
        description: "ISO format date created"
